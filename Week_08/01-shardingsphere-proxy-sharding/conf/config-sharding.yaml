#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

######################################################################################################
# 
# Here you can configure the rules for the proxy.
# This example is configuration of sharding rule.
# 
######################################################################################################
#
# 虚拟库名
schemaName: testsharding

dataSourceCommon:
  username: root
  password: 
  connectionTimeoutMilliseconds: 30000
  idleTimeoutMilliseconds: 60000
  maxLifetimeMilliseconds: 1800000
  maxPoolSize: 10
  minPoolSize: 1
  maintenanceIntervalMilliseconds: 30000

dataSources:
  dbtest1:
    url: jdbc:mysql://127.0.0.1:3316/dbtest1?serverTimezone=UTC&useSSL=false
  dbtest2:
    url: jdbc:mysql://127.0.0.1:3316/dbtest2?serverTimezone=UTC&useSSL=false

rules:
- !SHARDING
  tables:
    # 虚拟表名
    t_order:
      actualDataNodes: dbtest${1..2}.t_order${1..3}
      tableStrategy:
        standard:
          shardingColumn: id
          shardingAlgorithmName: t_order_inline
      keyGenerateStrategy:
        column: id
        keyGeneratorName: snowflake
        
  defaultDatabaseStrategy:
    standard:
      shardingColumn: id
      shardingAlgorithmName: database_inline
  defaultTableStrategy:
    none:
  
  shardingAlgorithms:
    database_inline:
      type: INLINE
      props:
        algorithm-expression: dbtest${id % 2 + 1}
    t_order_inline:
      type: INLINE
      props:
        algorithm-expression: t_order${id % 3 + 1}
        # 允许范围查询
        allow-range-query-with-inline-sharding: true
        
  keyGenerators:
    snowflake:
      type: SNOWFLAKE
      props:
        worker-id: 123


